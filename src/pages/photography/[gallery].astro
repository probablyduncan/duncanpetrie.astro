---
import { getCollection, type CollectionEntry } from "astro:content";
import { getPhotosByNamesAndTags } from "../../lib/photoHelper";
import BaseHead from "../../components/BaseHead.astro";
import RootColors from "../../components/RootColors.astro";
import TickerNav from "../../components/TickerNav.astro";
import Link from "../../components/Link.astro";
import FooterMono from "../../components/FooterMono.astro";
import GalleryPhotoScroll from "../../components/GalleryPhotoScroll.astro";
import GalleryHeader from "../../components/GalleryHeader.astro";

type Props = CollectionEntry<"galleries">;
export async function getStaticPaths() {
    const posts: any[] = await getCollection("galleries");
    return posts.map((post) => ({
        params: { gallery: post.slug },
        props: post,
    }));
}

const post = Astro.props;

const { Content } = await post.render();

const allPhotos = getPhotosByNamesAndTags({
    tags: post.data.photoTags,
    names: post.data.photoNames,
    excludeTags: post.data.excludeTags,
    excludeNames: post.data.excludeNames,
});

if (post.data.sort == "asc") {
    allPhotos.reverse();
}
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead
            title={post.data.title}
            description={post.data.description}
            imgSrc={allPhotos[0].paths["small"]}
        />
        <RootColors colors={{ ...post.data.colors }} />
    </head>
    <body>
        <TickerNav />
        <main>
            <GalleryHeader
                galleries={true}
                allPhotographyLink={true}
                permanentCollectionLink={true}
                bestOfMonthLink={true}
            >
                <span slot="title"
                    >{
                        post.data.title.split("//").map((str, i) => (
                            <span style="white-space: nowrap;">
                                {i === 0 && post.data.isLocation && (
                                    <span style="font-style: normal;">â–¼</span>
                                )}
                                {str}
                                <br />
                            </span>
                        ))
                    }</span
                >
                {
                    post.data.description && (
                        <span slot="description">{post.data.description}</span>
                    )
                }
            </GalleryHeader>
            <GalleryPhotoScroll
                photos={allPhotos}
                widthBasis="600px"
                shuffle={post.data.shuffle}
                noCaptions={post.data.noCaptions}
            >
                <Content components={{ a: Link }} />
            </GalleryPhotoScroll>
        </main>
        <FooterMono align="center" />
        <style>
            main {
                --gallery-gap: 40vh;
                width: calc(100vw - 80px);
                margin-bottom: var(--gallery-gap);
            }

            @media screen and (max-width: 700px) {
                main {
                    width: calc(100vw - 20px);
                }
            }
        </style>
    </body>
</html>
