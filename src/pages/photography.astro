---
import { getCollection } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import RootColors from "../components/RootColors.astro";
import TickerNav from "../components/TickerNav.astro";
import {
    getGalleryLinkAlt,
    resolveGalleryTitle,
} from "../lib/galleryHelper";
import ThemeManager from "../components/ThemeManager.astro";
import { getGenericPhotographyIndexThemes } from "../lib/themeHelper";
import Link from "../components/Link.astro";

const galleries = (await getCollection("galleries")).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);
if (galleries.length % 2 === 1) {
    galleries.unshift(null);
    // galleries.splice(1, 0, null);
}
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead
            title="Photography"
            description="Photography galleries, stories, theory, practice, and Duncan Petrie's best (which might or might not be very good, depending on how you look at it)."
        />
        <RootColors colors={{}} />
    </head>
    <body>
        <TickerNav />
        <main>
            <div>
                <img
                    data-theme-element
                    src=""
                    alt="loading..."
                    loading="eager"
                />
                <nav>
                    <ul>
                        <li>
                            ◮ <Link
                                href="/permanent-collection"
                                title="Photography: The Best of the Best"
                                >The Permanent Collection</Link
                            >.
                        </li>
                        <li>
                            <Link
                                href="/best-of-the-month"
                                title="Photography: The Best of the Month"
                                >Best of the Month</Link
                            >.
                        </li>
                    </ul>
                    <ul>
                        {
                            galleries.map((g) => {
                                if (!g) {
                                    return <li class="placeholder" />;
                                }

                                const attrs = {
                                    href: "/" + g.slug,
                                    title: getGalleryLinkAlt(g),
                                };

                                return (
                                    <li class:list={{ star: g.data.star }}>
                                        <Link {...attrs}>
                                            {resolveGalleryTitle(g)}
                                        </Link>
                                    </li>
                                );
                            })
                        }
                    </ul>
                    <ul>
                        <li>⇱ <Link href="/">Back to home</Link></li>
                        <!-- <li><Link href="/about">About me</Link>.</li> -->
                    </ul>
                </nav>
            </div>
            <ThemeManager
                storeKey="photoIndexTheme"
                themeData={getGenericPhotographyIndexThemes()}
            />
        </main>
    </body>
</html>
<style>
    main {
        margin-top: var(--ticker-height);
        max-width: calc(100vw - 20px);
    }

    div {
        width: 1200px;
        max-width: 100%;
    }

    ul {
        list-style: none;
        line-height: 1.4em;
        padding: 0;
        margin: 0;
    }

    @media screen and (max-width: 1280px) {
        div {
            width: 900px;
        }
    }

    @media screen and (max-width: 980px) {
        div {
            width: 680px;
        }
    }

    @media screen and (min-width: 701px) {
        main {
            min-height: calc(100vh - var(--ticker-height));
            display: flex;
            align-items: center;
        }

        div {
            position: relative;
            aspect-ratio: var(--img-ratio);
            height: 100%;
            margin: 10px 0;
        }

        img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            user-select: none;
            pointer-events: none;
        }

        nav {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            color: var(--over-image-color);

            display: flex;
            flex-flow: row wrap;
            justify-content: space-between;
        }

        ul {
            display: flex;
            flex-flow: column nowrap;
            flex-basis: calc(50% - 1em);
            margin: 0.3em 0.5em;
            font-size: 1rem;
        }

        ul:nth-child(3) {
            text-align: right;
        }

        ul:nth-child(2) {
            flex-basis: 100%;
            order: 2;
            display: flex;
            flex-flow: row-reverse wrap;
            align-content: flex-end;
        }

        ul:nth-child(2) li {
            flex-basis: 50%;
        }

        ul:nth-child(2) li:nth-child(2n - 1) {
            text-align: right;
        }

        li.star:nth-child(2n)::after,
        li.star:nth-child(2n - 1)::before {
            content: "★";
            padding: 0 0.1em;
        }
    }

    @media screen and (max-width: 700px) {
        img,
        nav {
            margin-top: 20px;
        }

        ul {
            margin: 10px;
        }

        li.star::after {
            content: "★";
        }

        main {
            margin-bottom: 40vh;
        }
    }
</style>
