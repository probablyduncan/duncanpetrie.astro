---
import type { ImageSize } from "../lib/consts";
import { getImgSize, getPhotoByName } from "../lib/photoHelper";
import { type ImageProps } from "../env";

interface Props extends ImageProps {}

const {
    photoName,
    size,
    src,
    caption,
    captionAlign = "left",
    captionAccent = true,
    noCaption = false,
    ratio,
    crisp = false,
} = Astro.props;

if (!photoName && !src) {
    throw Error("Image must have a photo or image prop.");
}

const photoData = photoName ? getPhotoByName(photoName) : null;

const srcResolved = photoData
    ? photoData.paths[(size ?? "medium") as ImageSize]
    : src;

const captionResolved = noCaption
    ? null
    : photoData
      ? (caption ?? photoData.joinedCaption)
      : caption;

const isVideo = !photoData && src.endsWith(".mp4");

const aspectRatio =
    ratio ?? (photoData ? photoData.ratio : (await getImgSize(src)).ratio);
---

{
    isVideo ? (
        <video controls="" style={`width: 100%; aspect-ratio: ${aspectRatio};`}>
            <source src={src} type="video/mp4" />
            Your browser does not support video.
        </video>
    ) : (
        <img
            class:list={{ crisp }}
            src={srcResolved}
            style={`aspect-ratio: ${aspectRatio};`}
            alt={captionResolved}
            loading="lazy"
        />
    )
}

{
    captionResolved && (
        <div
            class:list={[
                "monospace",
                { "color-accent": captionAccent },
                captionAlign,
            ]}
        >
            {captionResolved}
        </div>
    )
}

<style type="text/css">
    div {
        font-size: 0.8rem;
        font-weight: bold;
        margin: 4px 0;
    }
</style>
