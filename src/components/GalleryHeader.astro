---
import { getCollection } from "astro:content";
import Link from "./Link.astro";
import { getBestOfTheMonthGroups } from "../lib/bestOfTheMonthGroups";
import { getGalleryLinkAlt } from "../lib/galleryHelper";
import { resolveGalleryTitle } from "../lib/galleryHelper";

interface Props {
    currentPage?: string;
    allPhotographyLink?: boolean;
    permanentCollectionLink?: boolean;
    bestOfMonthLink?: boolean;
    galleries?: boolean
    months?: boolean
}

const { currentPage = "", allPhotographyLink = false, permanentCollectionLink = false, bestOfMonthLink = false, galleries = false, months = false } = Astro.props;

const allGalleries = await getCollection("galleries");
---

<header>
    <h1><slot name="title" /></h1>
    <nav class="mono-small">
        <p>
            <slot name="description" />
        </p>
        <p>
            Go <Link title="Back! to the home page">home</Link>. <Link href="/writing" title="All writing">Writing</Link>. <Link href="/about" title="About me">About</Link>.
            <br/>
            <Link href="mailto">Email me</Link>. <Link>Instagram</Link>. 
        </p>
        {allPhotographyLink && <p>
            <Link href="/photography">Photography index</Link>.
        </p>}
        {permanentCollectionLink && <p>
            See the <Link href="/photography/permanent-collection" title="Photography: The Permanent Collection">Permanent Collection</Link>.
        </p>}
        {bestOfMonthLink && <p>
            {permanentCollectionLink ? "Or" : "See"} the <Link href="/photography/best-of-the-month" title="Photography: The Best of the Month">Best of the Month</Link>.
        </p>}
        {galleries && <>
            <p>
                ⁜ Galleries:
            </p>
            <p class="galleries">
                {
                    allGalleries.filter(g => !g.data.isLocation).map((g) => (
                        <span>
                            <Link href={"/photography/" + g.slug} title={getGalleryLinkAlt(g)}>{resolveGalleryTitle(g)}</Link>.{" "}
                        </span>
                    ))
                }
            </p>
        </>}
        {months && <>
            <p>
                ◮ Photo Archives:
            </p>
            <p class="month-archives">
                {
                    getBestOfTheMonthGroups().map((group, i) => {
                        const attrs = {
                            href: `/photography/best-of-the-month${i === 0 ? "" : `/${group.slug}`}`,
                            title: `Photography: Best of ${group.monthLongName} ${group.year}`,
                        }
                        if (attrs.href === currentPage) {
                            return (
                                <span
                                    class="color-accent"
                                    style="cursor: not-allowed;"
                                >
                                    <b>{group.display}</b>.{" "}
                                </span>
                            );
                        } else {
                            return (
                                <span>
                                    <a {...attrs}>{group.display}</a>.{" "}
                                </span>
                            );
                        }
                    })
                }
            </p>
        </>}
    </nav>
</header>
<style>
    header {
        display: flex;
        flex-flow: row;
        justify-content: space-between;
        align-items: flex-end;

        width: 100%;
        padding: 200px 0 40px;
        border-bottom: 2px solid var(--color-text);
        margin-bottom: var(--gallery-gap);

        box-shadow: 0 120px 160px -120px rgba(0, 0, 0, 0.05);
    }

    h1 {
        font-size: 5.6rem;
        font-style: italic;
        font-weight: normal;
        /* max-width: 600px; */
        margin: 0;
    }

    nav {
        width: 280px;
        max-width: 280px;
        min-width: 280px;
        text-align: right;
    }

    @media screen and (max-width: 750px) {
        header {
            flex-flow: column;
            align-items: flex-start;
            gap: 40px;
            padding: calc(var(--ticker-height) + 20px) 0 40px;
        }

        h1 {
            font-size: 4.2rem;
            max-width: 100%;
            hyphens: none;
            -webkit-hyphens: none;
            -moz-hyphens: none;
            -ms-hyphens: none;
        }

        nav {
            text-align: left;
            margin-left: 10px;
        }
    }
</style>
