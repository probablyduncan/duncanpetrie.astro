---
import type { SideClass } from "../env";
import type { ImageSize } from "../lib/consts";
import type { PhotoData } from "../lib/photoHelper";
import Image from "./Image.astro";

interface Props {
    photos: PhotoData[];
    widthBasis?: string;
    photoGap?: string;
    captionAccent?: boolean;
    captionAlign?: SideClass | "random";
    noCaptions?: boolean;
    imageSize?: ImageSize;
    shuffle?: boolean;
}

const {
    photos,
    widthBasis = "600px",
    photoGap = "var(--gallery-gap)",
    captionAccent = false,
    captionAlign = "right",
    noCaptions = false,
    imageSize = "medium",
    shuffle = false,
} = Astro.props;

const text = Astro.slots.has("default") ? (await Astro.slots.render("default")).trim() : "";
const hasText = text.length > 0;
const useColumns = text.split("<p>").length > 3 || text.split(" ").length > 100;
---

<!-- {hasText && <div class="center" style="margin-bottom: 40px; padding-right: 20px">[ <button data-skip-text>skip to photos</button> ]</div>} -->
<section style={`--base-width: ${widthBasis}; --photo-gap: ${photoGap}`}>
    {
        hasText && (
            <article class:list={["serif-body", "small", {columns: useColumns}]} class="serif-body small">
                <slot />
            </article>
        )
    }
    {
        photos.map((photo, i) => (
            <div
                class="image-wrapper"
                style={`--rand: ${Math.random() - 0.5}; --i: ${i}; --ratio: ${photo.ratio}; --sqrt-ratio: ${Math.sqrt(photo.ratio)};`}
            >
                <Image
                    photoName={photo.name}
                    size={imageSize}
                    captionAlign={
                        captionAlign === "random"
                            ? Math.random() < 0.5
                                ? "left"
                                : "right"
                            : captionAlign
                    }
                    captionAccent={captionAccent}
                    noCaption={noCaptions}
                />
            </div>
        ))
    }
</section>
<script>
    document.addEventListener("astro:page-load", () => {
        (document.querySelector("[data-skip-text") as HTMLElement)?.addEventListener('click', () => {
            const article = document.querySelector('article')
            window.scroll({
                top: article.offsetTop + article.clientHeight + window.innerHeight *.2,
                behavior: "smooth",
            })
        })
    })
</script>
<style>
    section {
        display: flex;
        flex-flow: column;
        align-items: center;
        gap: var(--photo-gap);
    }

    .image-wrapper {
        width: calc(var(--base-width) * var(--sqrt-ratio));
        max-width: 100%;
        order: var(--i);
    }

    article {
        order: -1;
        position: relative;
        width: 800px;
        max-width: 100%;

    }

    article.columns {
        column-count: 2;
        column-width: 390px;
        column-gap: 20px;
    }

    article :global(:first-child) {
        margin-top: 0;
    }

    article :global(p:first-child)::before {
        position: absolute;

        content: "►";
        top: 2px;
        left: -1.5em;

        /* content: '»';
                top: 0px;
                left: -1em; */
    }

    article :global(p):last-of-type::after {
        content: "⁘";
        margin-left: 0.5rem;
        position: relative;
    }
</style>
{shuffle && <script is:inline>
    function shufflePhotos() {
        document.querySelectorAll('.image-wrapper').forEach((e) => {
            e.style.setProperty("--i", Math.floor(Math.random() * 1000).toString());
        });
    }

    document.addEventListener("astro:after-swap", shufflePhotos);
    shufflePhotos();
</script>}