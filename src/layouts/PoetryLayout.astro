---
import type { MDXLayoutProps } from "astro";
import BaseHead from "../components/BaseHead.astro";
import TickerNav from "../components/TickerNav.astro";
import RootColors from "../components/RootColors.astro";
import { marked } from "marked";
import type { ColorScheme, SideClass } from "../env";
import type { PhotoName } from "../data/photoTypes.generated";
import Image from "../components/Image.astro";
import { applyColorSchemeDefaults } from "../lib/themeHelper";

interface LayoutOptions {
    title: string;
    date: Date;
    location: string;
    footerLinks?: string;
    coverImage?: {
        photo?: {
            name: PhotoName;
            captionOverride?: string;
        };
        image?: {
            src: string;
            caption?: string;
        };
        captionAlign?: SideClass;
        noCaption?: boolean;
    };
    colors?: ColorScheme;
}

type Props = MDXLayoutProps<LayoutOptions>;
const { frontmatter, url } = Astro.props;

const linkAliases = {
    email: "mailto:duncanpetrie1@gmail.com",
    insta: "https://instagram.com/probablyduncan",
    about: "/about",
    writing: "/writing",
    "": "/",
};

let footerLinks =
    frontmatter.footerLinks ??
    "Go [home](/). See more [writing](w). What's this [about](/about)? [Email me](email). [Instagram](insta)";
footerLinks = footerLinks
    .replaceAll("](insta)", "](https://instagram.com/probablydunca)")
    .replaceAll("](email)", "](mailto:duncanpetrie1@gmail.com)");

const footerLinksHtml = marked.parseInline(footerLinks, {});
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead />
        <RootColors
            colors={applyColorSchemeDefaults(frontmatter.colors, {
                accent: "red",
            })}
        />
    </head>
    <body>
        <TickerNav />
        <main>
            <header>
                <p><b>{frontmatter.title.toUpperCase()}</b></p>
                <p>
                    <i>
                        {frontmatter.location}
                        <br />
                        {
                            new Intl.DateTimeFormat("en-US", {
                                month: "long",
                            }).format(new Date(frontmatter.date))
                        }
                        {new Date(frontmatter.date).getFullYear()}
                    </i>
                </p>
            </header>
            {
                frontmatter.coverImage && (
                    <section class="cover-image">
                        <Image
                            photoName={frontmatter.coverImage.photo?.name}
                            size="large"
                            caption={frontmatter.coverImage.photo?.captionOverride ?? frontmatter.coverImage.image?.caption}
                            src={frontmatter.coverImage.image?.src}
                            captionAccent={false}
                            captionAlign={frontmatter.coverImage.captionAlign}
                            noCaption={frontmatter.coverImage.noCaption}
                        />
                    </section>
                )
            }
            <article>
                <slot />
            </article>
            <footer class="mono-small">
                Go <b><a href="/">Home</a></b>. More
                <b><a href="/writing">Writing</a></b>.
                <b><a href="/about">About</a>.</b>
                <b><a href="mailto:duncanpetrie1@gmail.com">Email</a>.</b>
                <b
                    ><a href="https://instagram.com/probablyduncan">Instagram</a
                    >.</b
                >
            </footer>
        </main>
        <style>
            main {
                display: flex;
                flex-flow: column;
                align-items: center;
            }

            .cover-image {
                width: 600px;
                max-width: calc(100vw - 20px);
                margin-bottom: 20px;
            }

            header,
            article,
            footer {
                line-height: 1.6em;
                width: 400px;
                max-width: calc(100vw - 20px);
            }

            header {
                padding: 20px 0;
                border-top: 2px solid var(--color-text);
                border-bottom: 2px solid var(--color-text);
                margin: calc(var(--ticker-height) + 40px) 0 40px;
                text-align: center;
                /* text-align: right; */
            }

            header p {
                width: 70%;
                margin-left: 15%;
            }

            article {
                /* max-width: 300px; */
                margin-bottom: 50vh;
            }

            footer {
                margin-bottom: 1.25em;
                /* border-top: 2px solid var(--color-text);
                padding-top: 1em; */
            }

            @media screen and (max-width: 700px) {
                header {
                    border-top: none;
                    padding: 0 0 40px;
                    margin-bottom: 40px;
                }
            }
        </style>
    </body>
</html>
